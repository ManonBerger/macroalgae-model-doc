{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Welcome to Macroalgae PISCES Module This is the documentation for the Macroalgae module integrated to PISCES ocean biogeochemical model ( PISCES model ). See the model description for more details.","title":"Home"},{"location":"#welcome-to-macroalgae-pisces-module","text":"This is the documentation for the Macroalgae module integrated to PISCES ocean biogeochemical model ( PISCES model ). See the model description for more details.","title":"Welcome to Macroalgae PISCES Module"},{"location":"Model/Degradation/","text":"Degradation of macroalgae detritus This section describes the routine p4zpocmac.F90 the computation of the degradation of macroalgal-derived particulate organic carbon ( POCMAC ) into dissolved organic carbon ( DOCMAC ) within the PISCES biogeochemical model. The transformation is temperature-dependent and represents a first-order remineralization process. Overview At each time step, the degradation of POCMAC is computed based on the local seawater temperature. A proportion of the labile fraction (95%) of detrital macroalgae carbon is remineralized into DOC. The rate is calculated and applied to the tracer arrays, ensuring mass conservation in the organic matter cycle. Equation The degradation rate of POCMAC is faster at higher temperature, following Filbee-Dexter et al (2022) : R_{remin,ijk} = (0.054 \u00d7 T_ijk + 0.3605) \u00d7 \u0394t \\frac{dPOCMAC}{dt} = - 0.95 \u00d7 Remin_rate \u00d7 POCMAC \\frac{dDOCMAC}{dt} = + 0.95 \u00d7 Remin_rate \u00d7 POCMAC Where: Only 95% of POCMAC is considered labile and degradable, The remaining 5% is refractory and assumed not to remineralize on model timescales. Variable Mapping Fortran Name Description Symbol ts(:,:,:,jp_tem,Kmm) Temperature field at current time step T_ijk xstep Duration of the tracer time step (in seconds) \u0394t reminratepocmac Temperature-dependent remineralization rate of POCMAC Remin_rate_ijk iom_put(\"xdegradpoc\", \u2026) Output variable for diagnostics \u2013 Diagnostic Output The routine outputs a 3D diagnostic field xdegradpoc , which represents the degradation flux (in mmol\u202fC\u202fm\u207b\u00b3\u202fd\u207b\u00b9) of particulate macroalgal carbon to DOC. This field is useful for analyzing the spatial pattern of macroalgae remineralization in the ocean. Reference Filbee-Dexter, K., Pessarrodona, A., Pedersen, M.F. et al. Carbon export from seaweed forests to deep ocean sinks. Nat. Geosci. 17, 552\u2013559 (2024). https://doi.org/10.1038/s41561-024-01449-7","title":"Degradation"},{"location":"Model/Degradation/#degradation-of-macroalgae-detritus","text":"This section describes the routine p4zpocmac.F90 the computation of the degradation of macroalgal-derived particulate organic carbon ( POCMAC ) into dissolved organic carbon ( DOCMAC ) within the PISCES biogeochemical model. The transformation is temperature-dependent and represents a first-order remineralization process.","title":"Degradation of macroalgae detritus"},{"location":"Model/Degradation/#overview","text":"At each time step, the degradation of POCMAC is computed based on the local seawater temperature. A proportion of the labile fraction (95%) of detrital macroalgae carbon is remineralized into DOC. The rate is calculated and applied to the tracer arrays, ensuring mass conservation in the organic matter cycle.","title":"Overview"},{"location":"Model/Degradation/#equation","text":"The degradation rate of POCMAC is faster at higher temperature, following Filbee-Dexter et al (2022) : R_{remin,ijk} = (0.054 \u00d7 T_ijk + 0.3605) \u00d7 \u0394t \\frac{dPOCMAC}{dt} = - 0.95 \u00d7 Remin_rate \u00d7 POCMAC \\frac{dDOCMAC}{dt} = + 0.95 \u00d7 Remin_rate \u00d7 POCMAC Where: Only 95% of POCMAC is considered labile and degradable, The remaining 5% is refractory and assumed not to remineralize on model timescales.","title":"Equation"},{"location":"Model/Degradation/#variable-mapping","text":"Fortran Name Description Symbol ts(:,:,:,jp_tem,Kmm) Temperature field at current time step T_ijk xstep Duration of the tracer time step (in seconds) \u0394t reminratepocmac Temperature-dependent remineralization rate of POCMAC Remin_rate_ijk iom_put(\"xdegradpoc\", \u2026) Output variable for diagnostics \u2013","title":"Variable Mapping"},{"location":"Model/Degradation/#diagnostic-output","text":"The routine outputs a 3D diagnostic field xdegradpoc , which represents the degradation flux (in mmol\u202fC\u202fm\u207b\u00b3\u202fd\u207b\u00b9) of particulate macroalgal carbon to DOC. This field is useful for analyzing the spatial pattern of macroalgae remineralization in the ocean.","title":"Diagnostic Output"},{"location":"Model/Degradation/#reference","text":"Filbee-Dexter, K., Pessarrodona, A., Pedersen, M.F. et al. Carbon export from seaweed forests to deep ocean sinks. Nat. Geosci. 17, 552\u2013559 (2024). https://doi.org/10.1038/s41561-024-01449-7","title":"Reference"},{"location":"Model/Initialisation/","text":"Macroalgae Biomass Initialization At the start of a simulation (when ln_rsttr = .FALSE. ), the biomass of red and brown macroalgae is initialized using a bathymetric mask called macrogebco . This mask defines the potential habitat for macroalgae based on the high-resolution GEBCO bathymetry dataset. At the first time step, red and brown macroalgae are seeded with a small biomass (1.0\u202f\u00d7\u202f10\u207b\u00b3) multiplied by the proportion of the seafloor in each depth layer, as represented by the macrogebco mask. The macrogebco array gives, for each PISCES grid cell and depth level (down to 75\u202fm), the fraction of the seafloor area derived from GEBCO data. This mask was constructed by overlaying GEBCO bathymetry onto the PISCES grid: for each horizontal grid cell and depth interval, the number of GEBCO points falling within that volume was counted and converted into a proportion of the total horizontal cell area. This method ensures that the initial macroalgal biomass reflects the distribution of suitable shallow seafloor habitat within the model domain.","title":"Initialisation"},{"location":"Model/Initialisation/#macroalgae-biomass-initialization","text":"At the start of a simulation (when ln_rsttr = .FALSE. ), the biomass of red and brown macroalgae is initialized using a bathymetric mask called macrogebco . This mask defines the potential habitat for macroalgae based on the high-resolution GEBCO bathymetry dataset. At the first time step, red and brown macroalgae are seeded with a small biomass (1.0\u202f\u00d7\u202f10\u207b\u00b3) multiplied by the proportion of the seafloor in each depth layer, as represented by the macrogebco mask. The macrogebco array gives, for each PISCES grid cell and depth level (down to 75\u202fm), the fraction of the seafloor area derived from GEBCO data. This mask was constructed by overlaying GEBCO bathymetry onto the PISCES grid: for each horizontal grid cell and depth interval, the number of GEBCO points falling within that volume was counted and converted into a proportion of the total horizontal cell area. This method ensures that the initial macroalgal biomass reflects the distribution of suitable shallow seafloor habitat within the model domain.","title":"Macroalgae Biomass Initialization"},{"location":"Model/Mortality/","text":"Macroalgae Mortality and Erosion This is a description of p4zmacromort.F90 . This module simulates the mortality & errosion , distinguishing between two functional types: Temperate Brown Macroalgae Tropical Red Macroalgae For both type mechanical erosion, and natural mortality is included. Temperate brown seaweed are also subject to thermal stress. In the following i refers to either r or b for red or brown macroalgae. 1. Erosion Losses A fraction of net primary production (NPP) is lost due to erosion: \\text{Erosion}_i = x_{\\text{errate}}^{\\text{mac}} \\cdot NPP_i \\quad \\text{with } i \\in \\{b, r\\} 2. Quadratic Mortality Natural mortality is modeled as a quadratic function of tracer concentration: \\text{Mortality}_i = r_{\\text{mort}}^i \\cdot B_i^2 \\quad \\text{with } i \\in \\{b, r\\} 3. Thermal Stress Mortality (Brown Only) If temperature exceeds a defined threshold for several days, thermal stress mortality is added for brown macroalgae: \\text{Heat stress}_{b} = \\begin{cases} 0.3 \\cdot B_b, & \\text{if cumulative hot days} \\geq 10 \\\\ 0.1 \\cdot B_b, & \\text{if cumulative hot days} \\geq 5 \\\\ 0, & \\text{otherwise} \\end{cases} Thermal mortality is not applied to red macroalgae: 4. Biomass Update The total biomass tendency includes erosion, natural mortality, and (for brown) thermal stress: \\frac{dB_b}{dt} = - \\text{Erosion}_b - \\text{Mortality}_b - \\text{Mortality}_{\\text{temp},b} \\frac{dB_r}{dt} = - \\text{Erosion}_r - \\text{Mortality}_r 5. DOC and Detritus Update Lost biomass is partitioned into dissolved and particulate organic carbon of macroalgal matter, with xdocprod controlling this partition: \\frac{dDOC_{\\text{MAC}}}{dt} = +Mort_{\\text{tot}} \\cdot mask_{3D} \\cdot x_{\\text{doc}}^{\\text{prod}} \\frac{dDET_{\\text{MAC}}}{dt} = +Mort_{\\text{tot}} \\cdot mask_{3D} \\cdot (1 - x_{\\text{doc}}^{\\text{prod}}) Where $Mort_{\\text{tot}}$ is the total biomass loss due to erosion and mortality. Variable Mapping Variable in Fortran Description Equation Symbol tratempbrown Brown macroalgae biomass B_b tratropred Red macroalgae biomass B_r trbtempbrown Brown macroalgae tracer (for mortality calculation) T_b trbtropred Red macroalgae tracer (for mortality calculation) T_r nppmacb Net primary production of brown macroalgae NPP_b nppmacr Net primary production of red macroalgae NPP_r macrogebco Geographic presence mask for macroalgae G ts(:,:,jp_tem,:) Temperature field \u2014 was_hot_today Daily Boolean flag for high temperature \u2014 cumhighdaysb Cumulative number of hot days \u2014 day_lasthigh Model day of last high temperature \u2014 tr(:,:,jpdocmac,:) Dissolved organic carbon from macroalgal losses DOC_{mac} tr(:,:,jpdetmac,:) Particulate detritus carbon from macroalgal losses DET_{mac} zmortmacbrown Natural mortality of brown macroalgae (workspace) \u2014 zmortmacred Natural mortality of red macroalgae (workspace) \u2014 zmorttempb Temperature-induced mortality of brown macroalgae \u2014 zerrmacb Erosion losses of brown macroalgae \u2014 zerrmacr Erosion losses of red macroalgae \u2014 zmorttot Total biomass loss (erosion + mortality) M_{tot} Input Parameters (from nampismacmort namelist) Variable in Fortran Description Equation Symbol xerratemac Fraction of NPP lost to erosion x^{mac}_{errate} xdocprod Fraction of losses routed to dissolved organic carbon (DOC) x_{DOC}^{prod} mortmacrateb Quadratic mortality rate for brown macroalgae r^{b}_{mort} mortmacrater Quadratic mortality rate for red macroalgae r^{r}_{mort}","title":"Mortality & Errosion"},{"location":"Model/Mortality/#macroalgae-mortality-and-erosion","text":"This is a description of p4zmacromort.F90 . This module simulates the mortality & errosion , distinguishing between two functional types: Temperate Brown Macroalgae Tropical Red Macroalgae For both type mechanical erosion, and natural mortality is included. Temperate brown seaweed are also subject to thermal stress. In the following i refers to either r or b for red or brown macroalgae.","title":"Macroalgae Mortality and Erosion"},{"location":"Model/Mortality/#1-erosion-losses","text":"A fraction of net primary production (NPP) is lost due to erosion: \\text{Erosion}_i = x_{\\text{errate}}^{\\text{mac}} \\cdot NPP_i \\quad \\text{with } i \\in \\{b, r\\}","title":"1. Erosion Losses"},{"location":"Model/Mortality/#2-quadratic-mortality","text":"Natural mortality is modeled as a quadratic function of tracer concentration: \\text{Mortality}_i = r_{\\text{mort}}^i \\cdot B_i^2 \\quad \\text{with } i \\in \\{b, r\\}","title":"2. Quadratic Mortality"},{"location":"Model/Mortality/#3-thermal-stress-mortality-brown-only","text":"If temperature exceeds a defined threshold for several days, thermal stress mortality is added for brown macroalgae: \\text{Heat stress}_{b} = \\begin{cases} 0.3 \\cdot B_b, & \\text{if cumulative hot days} \\geq 10 \\\\ 0.1 \\cdot B_b, & \\text{if cumulative hot days} \\geq 5 \\\\ 0, & \\text{otherwise} \\end{cases} Thermal mortality is not applied to red macroalgae:","title":"3. Thermal Stress Mortality (Brown Only)"},{"location":"Model/Mortality/#4-biomass-update","text":"The total biomass tendency includes erosion, natural mortality, and (for brown) thermal stress: \\frac{dB_b}{dt} = - \\text{Erosion}_b - \\text{Mortality}_b - \\text{Mortality}_{\\text{temp},b} \\frac{dB_r}{dt} = - \\text{Erosion}_r - \\text{Mortality}_r","title":"4. Biomass Update"},{"location":"Model/Mortality/#5-doc-and-detritus-update","text":"Lost biomass is partitioned into dissolved and particulate organic carbon of macroalgal matter, with xdocprod controlling this partition: \\frac{dDOC_{\\text{MAC}}}{dt} = +Mort_{\\text{tot}} \\cdot mask_{3D} \\cdot x_{\\text{doc}}^{\\text{prod}} \\frac{dDET_{\\text{MAC}}}{dt} = +Mort_{\\text{tot}} \\cdot mask_{3D} \\cdot (1 - x_{\\text{doc}}^{\\text{prod}}) Where $Mort_{\\text{tot}}$ is the total biomass loss due to erosion and mortality.","title":"5. DOC and Detritus Update"},{"location":"Model/Mortality/#variable-mapping","text":"Variable in Fortran Description Equation Symbol tratempbrown Brown macroalgae biomass B_b tratropred Red macroalgae biomass B_r trbtempbrown Brown macroalgae tracer (for mortality calculation) T_b trbtropred Red macroalgae tracer (for mortality calculation) T_r nppmacb Net primary production of brown macroalgae NPP_b nppmacr Net primary production of red macroalgae NPP_r macrogebco Geographic presence mask for macroalgae G ts(:,:,jp_tem,:) Temperature field \u2014 was_hot_today Daily Boolean flag for high temperature \u2014 cumhighdaysb Cumulative number of hot days \u2014 day_lasthigh Model day of last high temperature \u2014 tr(:,:,jpdocmac,:) Dissolved organic carbon from macroalgal losses DOC_{mac} tr(:,:,jpdetmac,:) Particulate detritus carbon from macroalgal losses DET_{mac} zmortmacbrown Natural mortality of brown macroalgae (workspace) \u2014 zmortmacred Natural mortality of red macroalgae (workspace) \u2014 zmorttempb Temperature-induced mortality of brown macroalgae \u2014 zerrmacb Erosion losses of brown macroalgae \u2014 zerrmacr Erosion losses of red macroalgae \u2014 zmorttot Total biomass loss (erosion + mortality) M_{tot}","title":"Variable Mapping"},{"location":"Model/Mortality/#input-parameters-from-nampismacmort-namelist","text":"Variable in Fortran Description Equation Symbol xerratemac Fraction of NPP lost to erosion x^{mac}_{errate} xdocprod Fraction of losses routed to dissolved organic carbon (DOC) x_{DOC}^{prod} mortmacrateb Quadratic mortality rate for brown macroalgae r^{b}_{mort} mortmacrater Quadratic mortality rate for red macroalgae r^{r}_{mort}","title":"Input Parameters (from nampismacmort namelist)"},{"location":"Model/Production/","text":"Macroalgae Primary Production This is a description of p4zmacroprod.F90 . This module simulates the net primary production of macroalgae , distinguishing between two functional types: Temperate Brown Macroalgae Tropical Red Macroalgae Light, temperature, nutrient, and iron limitations are considered to compute the net primary production (NPP) . Model Structure For each 3D ocean grid cell where there is a macroalgae initial seed ( macrogebco > 0 ), the following processes are computed: Growth Limitations 1. Temperature Dependence The temperature growth limitation is given by a Gaussian function, following Wu et al (2023): f_T = \\exp\\left(-2.4 \\left(\\frac{T - T_{\\text{opt}}}{T_x - T_{\\text{opt}}}\\right)^2 \\right) Where: T : in situ temperature T_{\\text{opt}} : optimal temperature T_x : limiting temperature (either xtmax or xtmin ) 2. Light Limitation Light limitation uses a peaked function following Wu et al (2023): f_{\\text{PAR}} = \\left( \\frac{E}{E_{\\text{opt}}} \\right) \\cdot \\exp\\left(1 - \\frac{E}{E_{\\text{opt}}} \\right) Where: - E : total PAR at depth - E_{\\text{opt}} : optimal light for macroalgae 3. Macro nutrient Limitation (Michaelis-Menten) Nitrogen (NO\u2083) and phosphorus (PO\u2084) limitations are computed with a Michaelis-Menten function: L_{NO_3} = \\frac{[NO_3]}{K_{NO_3} + [NO_3]} \\quad ; \\quad L_{PO_4} = \\frac{[PO_4]}{K_{PO_4} + [PO_4]} Combined as: f_{\\text{nutrient}} = \\min(L_{NO_3}, L_{PO_4}) 4. Iron Limitation Iron limitation is computed with a Michaelis-Menten function, based on Paine et al. (2023): f_{Fe} = f_{Fe}^{\\text{max}} \\cdot \\frac{[Fe]}{K_{Fe} + [Fe]} Then: f_{\\text{nut}} = \\min(f_{\\text{nutrient}}, f_{Fe}) Gross Production Gross primary production: P = \\mu_{\\text{max}} \\cdot f_T \\cdot f_{\\text{nut}} \\cdot f_{\\text{PAR}} \\cdot \\Delta t Then corrected for sea ice cover : P = P \\cdot (1 - \\text{frac}_{\\text{ice}}) Respiration Respiration is temperature-dependent: R = \\mu_{\\text{resp}} \\cdot \\text{coef}_{\\text{resp}}^{T - 20} \\cdot P Net Primary Production Finally, NPP is computed as: NPP = (P - R) \\cdot \\text{B} \\frac{dB}{dt} = \\text{NPP} Nutrient Update The uptake of nutrients (PO\u2084, NO\u2083, DIC, Fe) is proportional to the NPP and stoichiometric ratios. \\frac{dDIC}{dt} = - NPP \\cdot mask_{3D} \\frac{dNO_3^{-}}{dt} = - NPP \\cdot mask_{3D} \\cdot \\frac{Q_{C:N}^{PHY}}{Q_{C:N}^{MAC}} \\frac{dPO_4^{3-}}{dt} = - NPP \\cdot mask_{3D} \\cdot \\frac{Q_{C:P}^{PHY}}{Q_{C:P}^{MAC}} \\frac{dDFe}{dt} = - NPP \\cdot mask_{3D} \\cdot \\frac{1}{Q_{C:Fe}^{MAC}} \\frac{dTA}{dt} = + r_{NO_3} \\cdot NPP \\cdot mask_{3D} \\cdot \\frac{Q_{C:N}^{PHY}}{Q_{C:N}^{MAC}} Variable Mapping Variable in Fortran Description Equation Symbol ts Temperature T etot Light at depth E tr(...,jpno3,...) NO\u2083 concentration [NO_3] tr(...,jppo4,...) PO\u2084 concentration [PO_4] tr(...,jpfer,...) Iron concentration [Fe] fr_i Sea ice fraction \\text{frac}_{\\text{ice}} trbtropred , trbtempbrown Biomass array B macrogebco(:,:,:) Bathymetry mask (% cell area) \\text{mask}_{3D}(:,:,:) xstep Time step \\Delta t Input Parameters (from nampismacprod namelist) Variable in Fortran Description Equation Symbol toptmacb , toptmacr Optimal temperature T_{\\text{opt}} xtmaxmacb , xtminmacb Temperature limits (brown) T_x xparoptmacb , xparoptmacr Optimal light E_{\\text{opt}} concmno3b , concmno3r NO\u2083 half-sat. constants K_{NO_3} concmpo4b , concmpo4r PO\u2084 half-sat. constants K_{PO_4} concmfe Fe half-sat. constant K_{Fe} xfegmacmax Fe limitation max factor f_{Fe}^{\\text{max}} xgmacmaxb , xgmacmaxr Max growth rate \\mu_{\\text{max}} xrpmacmax Max respiration rate \\mu_{\\text{resp}} xrespmaccoef Respiration temp. coefficient \\text{coef}_{\\text{resp}} References Wu et al., 2023. Paine et al., 2023. Output Variables These variables are output using iom_put : Output Description MACPRODB Gross production (Brown) MACPRODR Gross production (Red) MACNPPB Net primary production (Brown) MACNPPR Net primary production (Red) MACNPP Total net primary production MACRESP Respiration (all macroalgae)","title":"Production"},{"location":"Model/Production/#macroalgae-primary-production","text":"This is a description of p4zmacroprod.F90 . This module simulates the net primary production of macroalgae , distinguishing between two functional types: Temperate Brown Macroalgae Tropical Red Macroalgae Light, temperature, nutrient, and iron limitations are considered to compute the net primary production (NPP) .","title":"Macroalgae Primary Production"},{"location":"Model/Production/#model-structure","text":"For each 3D ocean grid cell where there is a macroalgae initial seed ( macrogebco > 0 ), the following processes are computed:","title":"Model Structure"},{"location":"Model/Production/#growth-limitations","text":"","title":"Growth Limitations"},{"location":"Model/Production/#1-temperature-dependence","text":"The temperature growth limitation is given by a Gaussian function, following Wu et al (2023): f_T = \\exp\\left(-2.4 \\left(\\frac{T - T_{\\text{opt}}}{T_x - T_{\\text{opt}}}\\right)^2 \\right) Where: T : in situ temperature T_{\\text{opt}} : optimal temperature T_x : limiting temperature (either xtmax or xtmin )","title":"1. Temperature Dependence"},{"location":"Model/Production/#2-light-limitation","text":"Light limitation uses a peaked function following Wu et al (2023): f_{\\text{PAR}} = \\left( \\frac{E}{E_{\\text{opt}}} \\right) \\cdot \\exp\\left(1 - \\frac{E}{E_{\\text{opt}}} \\right) Where: - E : total PAR at depth - E_{\\text{opt}} : optimal light for macroalgae","title":"2. Light Limitation"},{"location":"Model/Production/#3-macro-nutrient-limitation-michaelis-menten","text":"Nitrogen (NO\u2083) and phosphorus (PO\u2084) limitations are computed with a Michaelis-Menten function: L_{NO_3} = \\frac{[NO_3]}{K_{NO_3} + [NO_3]} \\quad ; \\quad L_{PO_4} = \\frac{[PO_4]}{K_{PO_4} + [PO_4]} Combined as: f_{\\text{nutrient}} = \\min(L_{NO_3}, L_{PO_4})","title":"3. Macro nutrient Limitation (Michaelis-Menten)"},{"location":"Model/Production/#4-iron-limitation","text":"Iron limitation is computed with a Michaelis-Menten function, based on Paine et al. (2023): f_{Fe} = f_{Fe}^{\\text{max}} \\cdot \\frac{[Fe]}{K_{Fe} + [Fe]} Then: f_{\\text{nut}} = \\min(f_{\\text{nutrient}}, f_{Fe})","title":"4. Iron Limitation"},{"location":"Model/Production/#gross-production","text":"Gross primary production: P = \\mu_{\\text{max}} \\cdot f_T \\cdot f_{\\text{nut}} \\cdot f_{\\text{PAR}} \\cdot \\Delta t Then corrected for sea ice cover : P = P \\cdot (1 - \\text{frac}_{\\text{ice}})","title":"Gross Production"},{"location":"Model/Production/#respiration","text":"Respiration is temperature-dependent: R = \\mu_{\\text{resp}} \\cdot \\text{coef}_{\\text{resp}}^{T - 20} \\cdot P","title":"Respiration"},{"location":"Model/Production/#net-primary-production","text":"Finally, NPP is computed as: NPP = (P - R) \\cdot \\text{B} \\frac{dB}{dt} = \\text{NPP}","title":"Net Primary Production"},{"location":"Model/Production/#nutrient-update","text":"The uptake of nutrients (PO\u2084, NO\u2083, DIC, Fe) is proportional to the NPP and stoichiometric ratios. \\frac{dDIC}{dt} = - NPP \\cdot mask_{3D} \\frac{dNO_3^{-}}{dt} = - NPP \\cdot mask_{3D} \\cdot \\frac{Q_{C:N}^{PHY}}{Q_{C:N}^{MAC}} \\frac{dPO_4^{3-}}{dt} = - NPP \\cdot mask_{3D} \\cdot \\frac{Q_{C:P}^{PHY}}{Q_{C:P}^{MAC}} \\frac{dDFe}{dt} = - NPP \\cdot mask_{3D} \\cdot \\frac{1}{Q_{C:Fe}^{MAC}} \\frac{dTA}{dt} = + r_{NO_3} \\cdot NPP \\cdot mask_{3D} \\cdot \\frac{Q_{C:N}^{PHY}}{Q_{C:N}^{MAC}}","title":"Nutrient Update"},{"location":"Model/Production/#variable-mapping","text":"Variable in Fortran Description Equation Symbol ts Temperature T etot Light at depth E tr(...,jpno3,...) NO\u2083 concentration [NO_3] tr(...,jppo4,...) PO\u2084 concentration [PO_4] tr(...,jpfer,...) Iron concentration [Fe] fr_i Sea ice fraction \\text{frac}_{\\text{ice}} trbtropred , trbtempbrown Biomass array B macrogebco(:,:,:) Bathymetry mask (% cell area) \\text{mask}_{3D}(:,:,:) xstep Time step \\Delta t","title":"Variable Mapping"},{"location":"Model/Production/#input-parameters-from-nampismacprod-namelist","text":"Variable in Fortran Description Equation Symbol toptmacb , toptmacr Optimal temperature T_{\\text{opt}} xtmaxmacb , xtminmacb Temperature limits (brown) T_x xparoptmacb , xparoptmacr Optimal light E_{\\text{opt}} concmno3b , concmno3r NO\u2083 half-sat. constants K_{NO_3} concmpo4b , concmpo4r PO\u2084 half-sat. constants K_{PO_4} concmfe Fe half-sat. constant K_{Fe} xfegmacmax Fe limitation max factor f_{Fe}^{\\text{max}} xgmacmaxb , xgmacmaxr Max growth rate \\mu_{\\text{max}} xrpmacmax Max respiration rate \\mu_{\\text{resp}} xrespmaccoef Respiration temp. coefficient \\text{coef}_{\\text{resp}}","title":"Input Parameters (from nampismacprod namelist)"},{"location":"Model/Production/#references","text":"Wu et al., 2023. Paine et al., 2023.","title":"References"},{"location":"Model/Production/#output-variables","text":"These variables are output using iom_put : Output Description MACPRODB Gross production (Brown) MACPRODR Gross production (Red) MACNPPB Net primary production (Brown) MACNPPR Net primary production (Red) MACNPP Total net primary production MACRESP Respiration (all macroalgae)","title":"Output Variables"},{"location":"Model/Remineralisation/","text":"Remineralization of Macroalgal DOC This is a description of p4zrem.F90 . To incorporate the remineralization of dissolved organic carbon from macroalgal origin ( DOCMAC ) into the biogeochemical model, we extended the existing remineralization scheme\u2014originally limited to phytoplankton-derived DOC. This document summarizes the added formulations and their stoichiometric interpretation. 1. Fraction of Macroalgal DOC We first calculate the fraction of total DOC originating from macroalgae: f_{DOCmac} = \\frac{DOC_{mac}}{DOC + DOC_{mac} + \\varepsilon} Here, \\varepsilon is a small number to prevent division by zero. 2. Remineralization Fluxes Oxic, suboxic and anoxic remineralization are computing as in PISCES std with DOC + DOCMAC . 3. Total Remineralization Flux The total remineralization flux is the sum of all pathways: R_{tot} =R_{oxic} + R_{denit} + R _{ano} 4. DOC and DOC MAC Evolution Remineralization is split between the phytoplankton-derived DOC and macroalgal DOC pools using f_{DOCMAC} : \\frac{dDOC}{dt} = -R_{tot} \\cdot (1 - f_{DOCMAC}) \\frac{dDOC_{mac}}{dt} = -R_{tot} \\cdot f_{DOCMAC} 5. Remineralization Products Dissolved Inorganic Carbon (DIC) All remineralized DOC contributes to DIC: \\frac{dDIC}{dt} = + R_{tot} Oxygen Only consumed in oxic remineralization: \\frac{dO_2}{dt} = - R_{oxic} \\cdot r_{O_2} Nitrate and Ammonium Stoichiometry accounts for distinct C:N ratios of phytoplankton and macroalgae: \\frac{dNO_3^-}{dt} = - R_{denit} \\cdot r_{denit} \\cdot \\left[(1 - f_{DOCMAC}) + f_{DOCMAC} \\cdot \\frac{Q_{C:N}^{PHY}}{Q_{C:N}^{MAC}}\\right] \\frac{dNH_4^+}{dt} = + R_{tot} \\cdot \\left[(1 - f_{DOCMAC}) + f_{DOCMAC} \\cdot \\frac{Q_{C:N}^{PHY}}{Q_{C:N}^{MAC}}\\right] Total Alkalinity (TAl) Alkalinity changes reflect nitrate consumption and denitrification: \\frac{dTA}{dt} = + r_{NO_3} \\cdot \\left( R_{tot} + r_{denit} \\cdot R_{denit} \\right) \\cdot \\left[(1 - f_{DOCMAC}) + f_{DOCMAC} \\cdot \\frac{Q_{C:N}^{PHY}}{Q_{C:N}^{MAC}} \\right] Phosphate Scaled similarly using C:P ratios: \\frac{dPO_4^{3-}}{dt} = + R_{tot} \\cdot \\left[(1 - f_{DOCMAC}) + f_{DOCMAC} \\cdot \\frac{Q_{C:P}^{PHY}}{Q_{C:P}^{MAC}} \\right] Iron (from macroalgae only) Iron is released as dissolved iron only from macroalgal DOC remineralization: \\frac{dDFe}{dt} = + R_{tot} \\cdot f_{DOCMAC} \\cdot \\left( \\frac{1}{Q_{C:Fe}^{MAC}} \\right) Variable Mapping Fortran Variable Documentation / Equation Name Description xdocmacdoc f_{\\text{mac}} = \\frac{\\text{DOC}_{\\text{MAC}}}{\\text{DOC} + \\text{DOC}_{\\text{MAC}}} Fraction of total DOC from macroalgae tr(:,:,:,jpdoc,...) \\text{DOC} Classical dissolved organic carbon tr(:,:,:,jpdocmac,...) \\text{DOC}_{\\text{MAC}} DOC from macroalgae tr(:,:,:,jpoxy,...) \\text{O}_2 Dissolved oxygen tr(:,:,:,jpno3,...) \\text{NO}_3^- Nitrate tr(:,:,:,jpdic,...) \\text{DIC} Dissolved inorganic carbon tr(:,:,:,jpnh4,...) \\text{NH}_4^+ Ammonium tr(:,:,:,jptal,...) \\text{TA} Total alkalinity tr(:,:,:,jppo4,...) \\text{PO}_4^{3-} Phosphate tr(:,:,:,jpfer,...) \\text{DFe} Dissolved iron qCN_phy Q_{\\text{C:N}}^{\\text{phy}} Phytoplankton carbon-to-nitrogen ratio qCN_mac Q_{\\text{C:N}}^{\\text{mac}} Macroalgae carbon-to-nitrogen ratio qCP_phy Q_{\\text{C:P}}^{\\text{phy}} Phytoplankton carbon-to-phosphorus ratio qCP_mac Q_{\\text{C:P}}^{\\text{mac}} Macroalgae carbon-to-phosphorus ratio qCFe_mac Q_{\\text{C:Fe}}^{\\text{mac}} Macroalgae carbon-to-iron ratio","title":"Remineralisation"},{"location":"Model/Remineralisation/#remineralization-of-macroalgal-doc","text":"This is a description of p4zrem.F90 . To incorporate the remineralization of dissolved organic carbon from macroalgal origin ( DOCMAC ) into the biogeochemical model, we extended the existing remineralization scheme\u2014originally limited to phytoplankton-derived DOC. This document summarizes the added formulations and their stoichiometric interpretation.","title":"Remineralization of Macroalgal DOC"},{"location":"Model/Remineralisation/#1-fraction-of-macroalgal-doc","text":"We first calculate the fraction of total DOC originating from macroalgae: f_{DOCmac} = \\frac{DOC_{mac}}{DOC + DOC_{mac} + \\varepsilon} Here, \\varepsilon is a small number to prevent division by zero.","title":"1. Fraction of Macroalgal DOC"},{"location":"Model/Remineralisation/#2-remineralization-fluxes","text":"Oxic, suboxic and anoxic remineralization are computing as in PISCES std with DOC + DOCMAC .","title":"2. Remineralization Fluxes"},{"location":"Model/Remineralisation/#3-total-remineralization-flux","text":"The total remineralization flux is the sum of all pathways: R_{tot} =R_{oxic} + R_{denit} + R _{ano}","title":"3. Total Remineralization Flux"},{"location":"Model/Remineralisation/#4-doc-and-docmac-evolution","text":"Remineralization is split between the phytoplankton-derived DOC and macroalgal DOC pools using f_{DOCMAC} : \\frac{dDOC}{dt} = -R_{tot} \\cdot (1 - f_{DOCMAC}) \\frac{dDOC_{mac}}{dt} = -R_{tot} \\cdot f_{DOCMAC}","title":"4. DOC and DOCMAC Evolution"},{"location":"Model/Remineralisation/#5-remineralization-products","text":"","title":"5. Remineralization Products"},{"location":"Model/Remineralisation/#dissolved-inorganic-carbon-dic","text":"All remineralized DOC contributes to DIC: \\frac{dDIC}{dt} = + R_{tot}","title":"Dissolved Inorganic Carbon (DIC)"},{"location":"Model/Remineralisation/#oxygen","text":"Only consumed in oxic remineralization: \\frac{dO_2}{dt} = - R_{oxic} \\cdot r_{O_2}","title":"Oxygen"},{"location":"Model/Remineralisation/#nitrate-and-ammonium","text":"Stoichiometry accounts for distinct C:N ratios of phytoplankton and macroalgae: \\frac{dNO_3^-}{dt} = - R_{denit} \\cdot r_{denit} \\cdot \\left[(1 - f_{DOCMAC}) + f_{DOCMAC} \\cdot \\frac{Q_{C:N}^{PHY}}{Q_{C:N}^{MAC}}\\right] \\frac{dNH_4^+}{dt} = + R_{tot} \\cdot \\left[(1 - f_{DOCMAC}) + f_{DOCMAC} \\cdot \\frac{Q_{C:N}^{PHY}}{Q_{C:N}^{MAC}}\\right]","title":"Nitrate and Ammonium"},{"location":"Model/Remineralisation/#total-alkalinity-tal","text":"Alkalinity changes reflect nitrate consumption and denitrification: \\frac{dTA}{dt} = + r_{NO_3} \\cdot \\left( R_{tot} + r_{denit} \\cdot R_{denit} \\right) \\cdot \\left[(1 - f_{DOCMAC}) + f_{DOCMAC} \\cdot \\frac{Q_{C:N}^{PHY}}{Q_{C:N}^{MAC}} \\right]","title":"Total Alkalinity (TAl)"},{"location":"Model/Remineralisation/#phosphate","text":"Scaled similarly using C:P ratios: \\frac{dPO_4^{3-}}{dt} = + R_{tot} \\cdot \\left[(1 - f_{DOCMAC}) + f_{DOCMAC} \\cdot \\frac{Q_{C:P}^{PHY}}{Q_{C:P}^{MAC}} \\right]","title":"Phosphate"},{"location":"Model/Remineralisation/#iron-from-macroalgae-only","text":"Iron is released as dissolved iron only from macroalgal DOC remineralization: \\frac{dDFe}{dt} = + R_{tot} \\cdot f_{DOCMAC} \\cdot \\left( \\frac{1}{Q_{C:Fe}^{MAC}} \\right)","title":"Iron (from macroalgae only)"},{"location":"Model/Remineralisation/#variable-mapping","text":"Fortran Variable Documentation / Equation Name Description xdocmacdoc f_{\\text{mac}} = \\frac{\\text{DOC}_{\\text{MAC}}}{\\text{DOC} + \\text{DOC}_{\\text{MAC}}} Fraction of total DOC from macroalgae tr(:,:,:,jpdoc,...) \\text{DOC} Classical dissolved organic carbon tr(:,:,:,jpdocmac,...) \\text{DOC}_{\\text{MAC}} DOC from macroalgae tr(:,:,:,jpoxy,...) \\text{O}_2 Dissolved oxygen tr(:,:,:,jpno3,...) \\text{NO}_3^- Nitrate tr(:,:,:,jpdic,...) \\text{DIC} Dissolved inorganic carbon tr(:,:,:,jpnh4,...) \\text{NH}_4^+ Ammonium tr(:,:,:,jptal,...) \\text{TA} Total alkalinity tr(:,:,:,jppo4,...) \\text{PO}_4^{3-} Phosphate tr(:,:,:,jpfer,...) \\text{DFe} Dissolved iron qCN_phy Q_{\\text{C:N}}^{\\text{phy}} Phytoplankton carbon-to-nitrogen ratio qCN_mac Q_{\\text{C:N}}^{\\text{mac}} Macroalgae carbon-to-nitrogen ratio qCP_phy Q_{\\text{C:P}}^{\\text{phy}} Phytoplankton carbon-to-phosphorus ratio qCP_mac Q_{\\text{C:P}}^{\\text{mac}} Macroalgae carbon-to-phosphorus ratio qCFe_mac Q_{\\text{C:Fe}}^{\\text{mac}} Macroalgae carbon-to-iron ratio","title":"Variable Mapping"},{"location":"Model/Sedimentation/","text":"Sedimentation Routines \u2013 Macroalgae Module This routine describes p4zsed.F90 which handles the remineralization of particulate organic carbon from macroalgae (POCMAC) reaching the seafloor and its impacts on biogeochemical tracers such as nutrients, oxygen, carbon, and alkalinity. Description The routine computes the remineralization fluxes from POC using a combination of: Denitrification (NO\u2083 to NH\u2084) under nitrate-rich, oxygen-depleted conditions. Oxygen consumption when O\u2082 is available. Release of dissolved organic carbon (DOC) and remineralized nutrients (PO\u2084\u00b3\u207b, NH\u2084\u207a). Changes in total alkalinity (TAlk) and dissolved inorganic carbon (DIC) . Iron remineralization , specifically from macroalgal origin. Burial is applied to macroalgae-derived POC via zbureffmac . Equations w_{\\text{POC}} = \\frac{F_{\\text{POC}}}{h} : local volumetric remineralization rate from sinking POC. x_{\\text{macro}} = \\frac{F_{\\text{POC,macro}}}{F_{\\text{POC,tot}}} : fraction of macroalgae POC. R_{\\text{stoich}} : stoichiometric ratios applied to convert organic matter to remineralized nutrients. Then: Total volumetric remineralization : w_{\\text{POC}} = \\frac{F_{\\text{POC,bio}} + F_{\\text{POC,macro}}}{h} Denitrification flux (NO\u2083 \u2192 NH\u2084) : P_{\\text{denit}} = \\min\\left(0.5 \\cdot \\frac{[\\text{NO}_3] - r_{\\text{trn}}}{r_{\\text{denit}}}, z_{\\text{denit}}^{2D} \\cdot w_{\\text{POC}} \\cdot R_{\\text{rivNO3}}\\right) Remaining remineralization not using NO\u2083 : R_{\\text{O}_2,\\text{limit}} = \\min\\left(\\frac{[\\text{O}_2] - r_{\\text{trn}}}{r_{\\text{O}_2}}, \\left(w_{\\text{POC}} \\cdot R_{\\text{rivNO3}} - P_{\\text{denit}}\\right) \\cdot (1 - f_{\\text{nitrif}})\\right) Stoichiometric redistribution : DIC : \\Delta \\text{DIC} = P_{\\text{denit}} + R_{\\text{O}_2,\\text{limit}} NH\u2084 : \\Delta \\text{NH}_4 = \\left(P_{\\text{denit}} + R_{\\text{O}_2,\\text{limit}}\\right) \\cdot \\left[(1 - x_{\\text{macro}}) + x_{\\text{macro}} \\cdot \\frac{q_{C:N}^{\\text{phy}}}{q_{C:N}^{\\text{mac}}}\\right] NO\u2083 : \\Delta \\text{NO}_3 = - r_{\\text{denit}} \\cdot P_{\\text{denit}} \\cdot \\left[(1 - x_{\\text{macro}}) + x_{\\text{macro}} \\cdot \\frac{q_{C:N}^{\\text{phy}}}{q_{C:N}^{\\text{mac}}}\\right] PO\u2084 : \\Delta \\text{PO}_4 = \\left(P_{\\text{denit}} + R_{\\text{O}_2,\\text{limit}}\\right) \\cdot \\left[(1 - x_{\\text{macro}}) + x_{\\text{macro}} \\cdot \\frac{q_{C:P}^{\\text{phy}}}{q_{C:P}^{\\text{mac}}}\\right] Fe : \\Delta \\text{Fe} = \\left(P_{\\text{denit}} + R_{\\text{O}_2,\\text{limit}}\\right) \\cdot x_{\\text{macro}} \\cdot \\frac{1}{q_{C:Fe}^{\\text{mac}}} Where macroalgae stoichiometry is mixed based on x_{\\text{macro}} , using: q_{C:N}^{\\text{phy}} , q_{C:P}^{\\text{phy}} for phytoplankton q_{C:N}^{\\text{mac}} , q_{C:P}^{\\text{mac}} , q_{C:Fe}^{\\text{mac}} for macroalgae. Variable Summary Variable Description Units sinkpocb Sinking flux of background POC mmol C m\u207b\u00b2 d\u207b\u00b9 sinkpocmac Sinking flux of macroalgae-derived POC mmol C m\u207b\u00b2 d\u207b\u00b9 tr(:,:,jpno3) Nitrate concentration mmol N m\u207b\u00b3 tr(:,:,jpoxy) Oxygen concentration mmol O\u2082 m\u207b\u00b3 tr(:,:,jpdoc) DOC concentration mmol C m\u207b\u00b3 tr(:,:,jpnh4) Ammonium concentration mmol N m\u207b\u00b3 tr(:,:,jppo4) Phosphate concentration mmol P m\u207b\u00b3 tr(:,:,jpdic) Dissolved inorganic carbon concentration mmol C m\u207b\u00b3 tr(:,:,jptal) Total alkalinity \u00b5mol eq m\u207b\u00b3 tr(:,:,jpfer) Iron concentration \u00b5mol Fe m\u207b\u00b3 qCN_phy , qCP_phy C\\:N and C\\:P ratios for phytoplankton mol\\:mol qCN_mac , qCP_mac C\\:N and C\\:P ratios for macroalgae mol\\:mol qCFe_mac C\\:Fe ratio for macroalgae mol\\:mol zbureffmac Macroalgae burial efficiency dimensionless","title":"Sedimentation"},{"location":"Model/Sedimentation/#sedimentation-routines-macroalgae-module","text":"This routine describes p4zsed.F90 which handles the remineralization of particulate organic carbon from macroalgae (POCMAC) reaching the seafloor and its impacts on biogeochemical tracers such as nutrients, oxygen, carbon, and alkalinity.","title":"Sedimentation Routines \u2013 Macroalgae Module"},{"location":"Model/Sedimentation/#description","text":"The routine computes the remineralization fluxes from POC using a combination of: Denitrification (NO\u2083 to NH\u2084) under nitrate-rich, oxygen-depleted conditions. Oxygen consumption when O\u2082 is available. Release of dissolved organic carbon (DOC) and remineralized nutrients (PO\u2084\u00b3\u207b, NH\u2084\u207a). Changes in total alkalinity (TAlk) and dissolved inorganic carbon (DIC) . Iron remineralization , specifically from macroalgal origin. Burial is applied to macroalgae-derived POC via zbureffmac .","title":"Description"},{"location":"Model/Sedimentation/#equations","text":"w_{\\text{POC}} = \\frac{F_{\\text{POC}}}{h} : local volumetric remineralization rate from sinking POC. x_{\\text{macro}} = \\frac{F_{\\text{POC,macro}}}{F_{\\text{POC,tot}}} : fraction of macroalgae POC. R_{\\text{stoich}} : stoichiometric ratios applied to convert organic matter to remineralized nutrients. Then: Total volumetric remineralization : w_{\\text{POC}} = \\frac{F_{\\text{POC,bio}} + F_{\\text{POC,macro}}}{h} Denitrification flux (NO\u2083 \u2192 NH\u2084) : P_{\\text{denit}} = \\min\\left(0.5 \\cdot \\frac{[\\text{NO}_3] - r_{\\text{trn}}}{r_{\\text{denit}}}, z_{\\text{denit}}^{2D} \\cdot w_{\\text{POC}} \\cdot R_{\\text{rivNO3}}\\right) Remaining remineralization not using NO\u2083 : R_{\\text{O}_2,\\text{limit}} = \\min\\left(\\frac{[\\text{O}_2] - r_{\\text{trn}}}{r_{\\text{O}_2}}, \\left(w_{\\text{POC}} \\cdot R_{\\text{rivNO3}} - P_{\\text{denit}}\\right) \\cdot (1 - f_{\\text{nitrif}})\\right) Stoichiometric redistribution : DIC : \\Delta \\text{DIC} = P_{\\text{denit}} + R_{\\text{O}_2,\\text{limit}} NH\u2084 : \\Delta \\text{NH}_4 = \\left(P_{\\text{denit}} + R_{\\text{O}_2,\\text{limit}}\\right) \\cdot \\left[(1 - x_{\\text{macro}}) + x_{\\text{macro}} \\cdot \\frac{q_{C:N}^{\\text{phy}}}{q_{C:N}^{\\text{mac}}}\\right] NO\u2083 : \\Delta \\text{NO}_3 = - r_{\\text{denit}} \\cdot P_{\\text{denit}} \\cdot \\left[(1 - x_{\\text{macro}}) + x_{\\text{macro}} \\cdot \\frac{q_{C:N}^{\\text{phy}}}{q_{C:N}^{\\text{mac}}}\\right] PO\u2084 : \\Delta \\text{PO}_4 = \\left(P_{\\text{denit}} + R_{\\text{O}_2,\\text{limit}}\\right) \\cdot \\left[(1 - x_{\\text{macro}}) + x_{\\text{macro}} \\cdot \\frac{q_{C:P}^{\\text{phy}}}{q_{C:P}^{\\text{mac}}}\\right] Fe : \\Delta \\text{Fe} = \\left(P_{\\text{denit}} + R_{\\text{O}_2,\\text{limit}}\\right) \\cdot x_{\\text{macro}} \\cdot \\frac{1}{q_{C:Fe}^{\\text{mac}}} Where macroalgae stoichiometry is mixed based on x_{\\text{macro}} , using: q_{C:N}^{\\text{phy}} , q_{C:P}^{\\text{phy}} for phytoplankton q_{C:N}^{\\text{mac}} , q_{C:P}^{\\text{mac}} , q_{C:Fe}^{\\text{mac}} for macroalgae.","title":"Equations"},{"location":"Model/Sedimentation/#variable-summary","text":"Variable Description Units sinkpocb Sinking flux of background POC mmol C m\u207b\u00b2 d\u207b\u00b9 sinkpocmac Sinking flux of macroalgae-derived POC mmol C m\u207b\u00b2 d\u207b\u00b9 tr(:,:,jpno3) Nitrate concentration mmol N m\u207b\u00b3 tr(:,:,jpoxy) Oxygen concentration mmol O\u2082 m\u207b\u00b3 tr(:,:,jpdoc) DOC concentration mmol C m\u207b\u00b3 tr(:,:,jpnh4) Ammonium concentration mmol N m\u207b\u00b3 tr(:,:,jppo4) Phosphate concentration mmol P m\u207b\u00b3 tr(:,:,jpdic) Dissolved inorganic carbon concentration mmol C m\u207b\u00b3 tr(:,:,jptal) Total alkalinity \u00b5mol eq m\u207b\u00b3 tr(:,:,jpfer) Iron concentration \u00b5mol Fe m\u207b\u00b3 qCN_phy , qCP_phy C\\:N and C\\:P ratios for phytoplankton mol\\:mol qCN_mac , qCP_mac C\\:N and C\\:P ratios for macroalgae mol\\:mol qCFe_mac C\\:Fe ratio for macroalgae mol\\:mol zbureffmac Macroalgae burial efficiency dimensionless","title":"Variable Summary"},{"location":"Model/Sinking/","text":"Sinking of Macroalgal Detritus This documentation describes the routines p4zsinkmac.F90 and trcsink.F90 , which include sinking of macroalgae detritus POCMAC . Overview In this module, the sinking of particulate organic carbon from macroalgae ( POCMAC ) is computed by modifying the existing routine in trcsink.F90 . Unlike standard detritus, macroalgal detritus is split into multiple size classes with distinct sinking speeds. This approach captures the heterogeneity in particle size, distributing the total detrital flux across multiple sinking speed. The sum of all distribws weights equals 1. Implementation The number of iterations for vertical sinking is adapted per grid point to satisfy a CFL-like condition: iiter(i,j) = max(iiter(i,j), floor(w(i,j,k) / (0.5 * e3t(i,j,k) * rday / rsfact)) + 1) For macroalgal particles we added nitermaxmac that allow bigger time splitting than std PISCES: IF (omtype .EQ. 2) THEN iiter(:,:) = MIN( iiter(:,:), nitermaxmac ) ENDIF Several calls to trc_sink are used, each for a different particle class: CALL trc_sink( kt, Kbb, Kmm, wsmacs1, zsinkingmacs1 , jpdetmac, rfact2, 2 , 0.1 ) ! small POCMAC, class 1 CALL trc_sink( kt, Kbb, Kmm, wsmacs2, zsinkingmacs2 , jpdetmac, rfact2, 2 , 0.1 ) CALL trc_sink( kt, Kbb, Kmm, wsmacb1, zsinkingmacb1 , jpdetmac, rfact2, 2 , 0.3 ) ! large POCMAC, class 1 CALL trc_sink( kt, Kbb, Kmm, wsmacb2, zsinkingmacb2 , jpdetmac, rfact2, 2 , 0.5 ) Each call distributes a portion of the tracer mass based on distribws . The total detritus is conserved: each portion sinks independently but all come from the same tr(jpdetmac) tracer. Variable Mapping Variable Description jpdetmac Index of macroalgal detritus tracer pwsink(ji,jj,jk) Sinking speed for a given size class and location distribws Fraction of tracer assigned to this sinking class zsinkingmac* Diagnostic array for storing vertical flux of each size class omtype Type of sinking: 1=standard , 2=macroalgae iiter(ji,jj) Number of sinking sub-steps to satisfy CFL-like condition nitermaxmac Maximum number of iterations for macroalgae particle sinking Input Parameters (from nampisdetmac namelist) Variable in Fortran Description Values ssmacs1 = wsmacs1 Sinking speed small particle class1 - ssmacs2 = wsmacs2 Sinking speed small particle class2 - ssmacb1 = wsmacb1 Sinking speed big particle class1 - ssmacb1 = wsmacb1 Sinking speed big particle class2 - Input Parameters (from namtrc_snk namelist) Variable in Fortran Description Values nitermaxmac Maximum number of iterations for macroalgae particle sinking -","title":"Sinking"},{"location":"Model/Sinking/#sinking-of-macroalgal-detritus","text":"This documentation describes the routines p4zsinkmac.F90 and trcsink.F90 , which include sinking of macroalgae detritus POCMAC .","title":"Sinking of Macroalgal Detritus"},{"location":"Model/Sinking/#overview","text":"In this module, the sinking of particulate organic carbon from macroalgae ( POCMAC ) is computed by modifying the existing routine in trcsink.F90 . Unlike standard detritus, macroalgal detritus is split into multiple size classes with distinct sinking speeds. This approach captures the heterogeneity in particle size, distributing the total detrital flux across multiple sinking speed. The sum of all distribws weights equals 1.","title":"Overview"},{"location":"Model/Sinking/#implementation","text":"The number of iterations for vertical sinking is adapted per grid point to satisfy a CFL-like condition: iiter(i,j) = max(iiter(i,j), floor(w(i,j,k) / (0.5 * e3t(i,j,k) * rday / rsfact)) + 1) For macroalgal particles we added nitermaxmac that allow bigger time splitting than std PISCES: IF (omtype .EQ. 2) THEN iiter(:,:) = MIN( iiter(:,:), nitermaxmac ) ENDIF Several calls to trc_sink are used, each for a different particle class: CALL trc_sink( kt, Kbb, Kmm, wsmacs1, zsinkingmacs1 , jpdetmac, rfact2, 2 , 0.1 ) ! small POCMAC, class 1 CALL trc_sink( kt, Kbb, Kmm, wsmacs2, zsinkingmacs2 , jpdetmac, rfact2, 2 , 0.1 ) CALL trc_sink( kt, Kbb, Kmm, wsmacb1, zsinkingmacb1 , jpdetmac, rfact2, 2 , 0.3 ) ! large POCMAC, class 1 CALL trc_sink( kt, Kbb, Kmm, wsmacb2, zsinkingmacb2 , jpdetmac, rfact2, 2 , 0.5 ) Each call distributes a portion of the tracer mass based on distribws . The total detritus is conserved: each portion sinks independently but all come from the same tr(jpdetmac) tracer.","title":"Implementation"},{"location":"Model/Sinking/#variable-mapping","text":"Variable Description jpdetmac Index of macroalgal detritus tracer pwsink(ji,jj,jk) Sinking speed for a given size class and location distribws Fraction of tracer assigned to this sinking class zsinkingmac* Diagnostic array for storing vertical flux of each size class omtype Type of sinking: 1=standard , 2=macroalgae iiter(ji,jj) Number of sinking sub-steps to satisfy CFL-like condition nitermaxmac Maximum number of iterations for macroalgae particle sinking","title":"Variable Mapping"},{"location":"Model/Sinking/#input-parameters-from-nampisdetmac-namelist","text":"Variable in Fortran Description Values ssmacs1 = wsmacs1 Sinking speed small particle class1 - ssmacs2 = wsmacs2 Sinking speed small particle class2 - ssmacb1 = wsmacb1 Sinking speed big particle class1 - ssmacb1 = wsmacb1 Sinking speed big particle class2 -","title":"Input Parameters (from nampisdetmac namelist)"},{"location":"Model/Sinking/#input-parameters-from-namtrc_snk-namelist","text":"Variable in Fortran Description Values nitermaxmac Maximum number of iterations for macroalgae particle sinking -","title":"Input Parameters (from namtrc_snk namelist)"},{"location":"Model/model/","text":"General description of the Macroalgae module Initialisation Production of macroalgae Mortality & Errosion Degradation of macroalgal detritus Sinking of detritus Remineralisation of macroalgal DOC Sedimentation of detritus .","title":"General Description"},{"location":"Model/model/#general-description-of-the-macroalgae-module","text":"Initialisation Production of macroalgae Mortality & Errosion Degradation of macroalgal detritus Sinking of detritus Remineralisation of macroalgal DOC Sedimentation of detritus .","title":"General description of the Macroalgae module"}]}